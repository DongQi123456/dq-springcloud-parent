server:
  port: 7900
eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://@application.server.ip@:@eureka.application.port@/eureka/
spring:
  application:
    name: order-info-service
  datasource:
    url: jdbc:mysql://192.168.0.114:3306/dq_springcloud?characterEncoding=utf8
    username: root
    password: root123
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    #初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    #配置获取连接等待超时的时间
    maxWait: 60000
    #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    #配置一个连接在池中的最小生存时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    #打开PSCache,并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    #配置监控统计拦截的filters,去掉后监控界面sql将无法统计， ‘wall’用于防火墙
    filters: stat,wall,log4j
    #通过connectProperties属性来打开mergeSql功能，慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
    #合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
    #useGlobalDataSourceStat=true
  jpa:
    database: mysql
    show-sql: true
    hibernate:
      ddl-auto: update
      naming:
        strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
  redis:
    host: 192.168.0.114
    port: 6379
    pool:
      max-idle: 8
      min-idle: 0
      max-active: 8
      max-wait: -1

#自定义的securityconfig配置
securityconfig:
  logoutsuccessurl: /
  permitall: /rest/**,/bbs**,/newAddUser,/swagger-ui.html
  deniedpage: /deny
  urlroles: /**/new = manage,admin;
          /**/edit/** = admin;
          /**/delete/** = admin